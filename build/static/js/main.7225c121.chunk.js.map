{"version":3,"sources":["../node_modules/encoding/lib sync","data/clients.js","components/ClientDropdown.js","data/getCMS.js","components/ClientConfig.js","components/SecretRequest.js","data/clientConfigData.js","components/BuzzerUI.js","data/query.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","data_clients","key","text","value","ClientDropdown","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","react_default","a","createElement","Dropdown","className","name","compact","placeholder","onChange","_ref","props","onClientChange","fluid","multiple","selection","options","clientData","Component","fetch","require","queryMessage","_callee","regenerator_default","wrap","_context","prev","next","abrupt","method","headers","Content-Type","Accept","Access-Control-Allow-Headers","body","JSON","stringify","query","then","r","json","catch","err","stop","CMSData","ClientConfig","_getCMSData","apply","arguments","getCMS","data","config","combinedConfigUI","selectedClients","map","client","Header","as","charAt","toUpperCase","slice","replace","input","dropdownConfig","cms","indx","onConfigChange","Input","_ref2","_ref3","_ref4","split","SecretRequest","handleClick","setState","modal_open","cookie","save","token","path","onCookieSet","load","Button","onClick","Modal","open","Content","content","clientConfigData","live_site","title","type","icon","slack","channels","at_channel","at_here","twilio","numbers","groups","twitter","_","f_c_m","header","tags","map_g_t","area","time","BuzzerUI","clients","onDataChange","bind","assertThisInitialized","close","components_SecretRequest","secret","buzzer_secret","components_ClientDropdown","prevState","toConsumableArray","message","components_ClientConfig","onSendNotification","Confirm","onCancel","onConfirm","plugins","adminKey","clientSchema","console","log","defineProperty","objectSpread","clientSchemaJson","index","Authorization","variables","sendNotification","_this3","Boolean","window","location","hostname","match","ReactDOM","render","components_BuzzerUI","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2SAAA,SAAAA,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAF,EAAA,KAEA,MADAC,EAAAE,KAAA,mBACAF,EAEAF,EAAAK,KAAA,WAAuC,UACvCL,EAAAM,QAAAN,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,8KCReC,EAAA,CACX,CACIC,IAAK,IACLC,KAAM,YACNC,MAAO,aAEX,CACIF,IAAK,IACLC,KAAM,UACNC,MAAO,WAEX,CACIF,IAAK,IACLC,KAAM,SACNC,MAAO,UAEX,CACIF,IAAK,IACLC,KAAM,QACNC,MAAO,SAEX,CACIF,IAAK,IACLC,KAAM,SACNC,MAAO,SAEX,CACIF,IAAK,IACLC,KAAM,QACNC,MAAO,YCJAC,sBApBd,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,GAFAP,wEAKL,IAAAQ,EAAAL,KACF,OAAQM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACJC,UAAU,iBACVC,KAAK,SACLC,SAAO,EACPC,YAAY,gBACZC,SAAU,SAAC9B,EAAD+B,GAAA,IAAIpB,EAAJoB,EAAIpB,MAAJ,OAAaU,EAAKW,MAAMC,eAAetB,IACjDuB,OAAK,EACLC,UAAQ,EACRC,WAAS,EACTC,QAASC,WAhBQC,2DCJzBC,EAAQC,EAAQ,KAEhBC,GADKD,EAAQ,KACD,68BA0FD,SAAAE,IAAA,OAAAC,EAAArB,EAAAsB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACPT,EAAM,8BAA+B,CAC1CU,OAAQ,OACRC,QAAS,CACRC,eAAA,mBACAC,OAAA,mBACYC,+BAAgC,KAE7CC,KAAMC,KAAKC,UAAU,CACpBC,MAAOhB,MAENiB,KAAK,SAAAC,GACP,OAAOA,EAAEC,SACPC,MAAM,SAAAC,GACC,OAAO,KAdJ,wBAAAjB,EAAAkB,SAAArB,6BCtFf,IAAIsB,EAAU,GA2FCC,cAxFd,SAAAA,IAAc,IAAArD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACbrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,QAEKI,MAAQ,GAHAP,oFDmFA,WAAf,OAAAsD,EAAAC,MAAApD,KAAAqD,YC5EEC,GAASX,KAAK,SAAAY,GACbN,EAAUM,qCAGH,IAAAlD,EAAAL,KACEwD,EAASxD,KAAKgB,MAAMwC,OACpBC,EACJzD,KAAKgB,MAAM0C,gBAAgBC,IAAI,SAAAC,GAC3B,OACItD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQC,GAAG,MACHF,EAAOG,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,GAAGC,QAAQ,IAAI,KAEpEpE,OAAOX,KAAKkB,EAAKW,MAAMwC,OAAOI,IAASD,IAAI,SAAAQ,GACxC,OAAOX,EAAOI,GAAQO,GAAf,MACrB,IAAK,WACJ,IACIC,EADmBnB,EAAQM,KAAKC,EAAOI,GAAQO,GAAOE,KACtBV,IAAI,SAACJ,EAAMe,GAAU,MAAO,CAC/D5E,KAAM6D,EAAKC,EAAOI,GAAQO,GAAf,MACXxE,MAAO4D,EAAKC,EAAOI,GAAQO,GAAf,OACZ1E,IAAK6E,EAAO,MAEb,OAAQhE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACPI,YAAc,GAAKsD,EACnBzD,UAAU,iBACVE,SAAO,EACPM,OAAK,EACLE,WAAS,EACTC,QAAS+C,EACTtD,SAAU,SAAC9B,EAAD+B,GAAA,IAAIpB,EAAJoB,EAAIpB,MAAJ,OAAaU,EAAKW,MAAMuD,eAAe5E,EAAOwE,EAAOP,MAG/C,IAAK,SACD,OACQtD,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAO9D,UAAU,cAAcG,YAAasD,EAC5CrD,SAAU,SAAC9B,EAADyF,GAAA,IAAI9E,EAAJ8E,EAAI9E,MAAJ,OAAaU,EAAKW,MAAMuD,eAAe5E,EAAOwE,EAAOP,MAG3E,IAAK,UACD,OACItD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACII,YAAc,GAAKsD,EACnBzD,UAAU,iBACVE,SAAO,EACPM,OAAK,EACLE,WAAS,EACTC,QAAS,CACL,CACI5B,IAAK,IACLC,KAAM,OACNC,OAAO,GAEX,CACIF,IAAK,IACLC,KAAM,QACNC,OAAO,IAGfmB,SAAU,SAAC9B,EAAD0F,GAAA,IAAI/E,EAAJ+E,EAAI/E,MAAJ,OAAaU,EAAKW,MAAMuD,eAAe5E,EAAOwE,EAAOP,MAG3E,IAAK,eACD,OACItD,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAO9D,UAAU,cACbG,YAAa,aAAesD,EAC5BrD,SAAU,SAAC9B,EAAD2F,GAAA,IAAIhF,EAAJgF,EAAIhF,MAAJ,OAAcU,EAAKW,MAAMuD,eAAe5E,EAAMiF,MAAM,KAAMT,EAAOP,YAQvG,OACItD,EAAAC,EAAAC,cAAA,WACKiD,UApFUlC,0DCkCZsD,cApCd,SAAAA,IAAc,IAAAhF,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6E,IACbhF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+E,GAAA1E,KAAAH,QA0BE8E,YAAc,WACVjF,EAAKkF,SAAS,CACZC,YAAY,IAEdC,IAAOC,KAAK,eAAgBrF,EAAKO,MAAM+E,MAAO,CAAEC,KAAM,MACtDvF,EAAKmB,MAAMqE,YAAYxF,EAAKO,MAAM+E,QA9BlC,IAAIA,EAAQF,IAAOK,KAAK,gBAFjB,OAGPzF,EAAKO,MAAQ,CACT4E,YAAaG,GAJVtF,wEAQL,IAAAQ,EAAAL,KACF,OACIM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAQC,QAAS,WAAKnF,EAAK0E,SAAS,CAACC,YAAY,MAAjD,wBACI1E,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOC,KAAM1F,KAAKI,MAAM4E,YACpB1E,EAAAC,EAAAC,cAACiF,EAAA,EAAM5B,OAAP,4BACAvD,EAAAC,EAAAC,cAACiF,EAAA,EAAME,QAAP,KACIrF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAO9D,UAAU,cACbG,YAAa,gBACbC,SAAU,SAAC9B,EAAD+B,GAAA,IAAIpB,EAAJoB,EAAIpB,MAAJ,OAAaU,EAAK0E,SAAS,CACjCI,MAAOxF,OAEfW,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAQK,QAAQ,SAASJ,QAASxF,KAAK8E,wBArBnCvD,aCJbsE,EAAA,CACXC,UAAW,CACPC,MAAO,CAACC,KAAK,UACbC,KAAM,CAACD,KAAK,WAEhBE,MAAO,CACHC,SAAU,CAACH,KAAK,gBAChBI,WAAY,CAACJ,KAAK,WAClBK,QAAS,CAACL,KAAK,YAEnBM,OAAQ,CACJC,QAAS,CAACP,KAAK,gBACfQ,OAAQ,CAACR,KAAK,iBAElBS,QAAS,CACLC,EAAG,CAACV,KAAK,YAEbW,MAAO,CACHC,OAAQ,CAACZ,KAAK,UACda,KAAM,CAACb,KAAK,WAEhBc,QAAS,CACLC,KAAM,CACFf,KAAM,WACN3B,IAAK,QACL1E,MAAO,aACPD,KAAM,QAEVqG,MAAO,CAACC,KAAK,UACbgB,KAAM,CAAChB,KAAK,qBC0DLiB,cA7EX,SAAAA,IAAc,IAAApH,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiH,IACVpH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmH,GAAA9G,KAAAH,QACKI,MAAQ,CACT8G,QAAS,IAEbrH,EAAKsH,aAAetH,EAAKsH,aAAaC,KAAlBtH,OAAAuH,EAAA,EAAAvH,QAAAuH,EAAA,EAAAvH,CAAAD,KACpBA,EAAK0E,eAAiB1E,EAAK0E,eAAe6C,KAApBtH,OAAAuH,EAAA,EAAAvH,QAAAuH,EAAA,EAAAvH,CAAAD,KACtBA,EAAKyH,MAAQzH,EAAKyH,MAAMF,KAAXtH,OAAAuH,EAAA,EAAAvH,QAAAuH,EAAA,EAAAvH,CAAAD,KAPHA,wEAUL,IAAAQ,EAAAL,KACL,OAAQM,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAC+G,EAAD,CAAelC,YAAa,SAACmC,GACrBnH,EAAK0E,SAAS,CAAC0C,cAAeD,OAEtClH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQC,GAAG,MAAX,eAGRxD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAACkH,EAAD,CAAgBzG,eAAgB,SAACtB,GACzBU,EAAK0E,SAAS,SAAA4C,GAAS,MAAK,CACxBT,QAAQpH,OAAA8H,EAAA,EAAA9H,CAAKH,WAKjCW,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAO9D,UAAU,cAAcG,YAAa,UAAWC,SAAU,SAAC9B,EAAD+B,GAAA,IAAKpB,EAALoB,EAAKpB,MAAL,OAAgBU,EAAK0E,SAAS,CAAC8C,QAASlI,SAGjHW,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAACsH,EAAD,CAActE,OAAQqC,GAAoB,GAAInC,gBAAiB1D,KAAKI,MAAM8G,SAAW,GAAI3C,eAAgBvE,KAAKuE,mBAGtHjE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAQK,QAAQ,SAASJ,QAAS,SAACxG,EAADyF,KAAK9E,MAAL,OAAgBU,EAAK0H,0BAI/DzH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAStC,KAAM1F,KAAKI,MAAMsF,KAAMuC,SAAUjI,KAAKsH,MAAOY,UAAWlI,KAAKsH,MAAO1B,QAAS,aAAgB5F,KAAKI,MAAMyH,QAAU,aAAgB7H,KAAKI,MAAM8G,6CAOlKlH,KAAK+E,SAAS,CAACW,MAAM,kDCvDd,SAACmC,EAASX,EAASiB,EAASC,GACvC,IAAIC,EAAenB,EAAQvD,IAAI,SAAAC,GAG3B,OAFA0E,QAAQC,IAAI,YACZD,QAAQC,IAAI3E,GACL9D,OAAA0I,EAAA,EAAA1I,CAAA,GACF8D,EADL9D,OAAA2I,EAAA,EAAA3I,CAAA,GAEWqI,MAIfG,QAAQC,IAAI,UACZD,QAAQC,IAAIF,GACZ,IAAIK,EAAmB,GACvBL,EAAa1E,IAAI,SAAAC,GACb,IAAI+E,EAAQ7I,OAAOX,KAAKyE,GAAQ,GAChC8E,EAAiBC,GAAS/E,EAAO+E,KAErCL,QAAQC,IAAIG,GACLlH,MAAM,WAAY,CACjBU,OAAQ,OACRC,QAAS,CACLC,eAAA,mBACAC,OAAA,mBACAuG,cAAiB,SAAWR,GAEhC7F,KAAMC,KAAKC,UAAU,CACjBC,MApCA,8LAqCAmG,UAAW,CACPhB,QAAWA,EACXM,QAAWO,OAGpB/F,KAAK,SAAAC,GAAC,OACLA,EAAEC,SACJF,KAAK,SAAAY,GAEH,OADA+E,QAAQC,IAAI,WAAYhF,IACjB,IDsBIuF,CAAiB9I,KAAKI,MAAMyH,QAAS7H,KAAKI,MAAM8G,QAASlH,KAAKI,MAAMJ,KAAKI,MAAM8G,SAAUlH,KAAKI,MAAMqH,eACnHzH,KAAK+E,SAAS,CAACW,MAAM,yCAEZ/F,EAAOF,GAChBO,KAAK+E,SAALjF,OAAA0I,EAAA,EAAA1I,CAAA,GAAgBL,EAAME,2CAGXA,EAAOF,EAAKyH,GAAS,IAAA6B,EAAA/I,KAChCsI,QAAQC,IAAI5I,EAAOF,GACnBO,KAAK+E,SAAS,SAAAhD,GAAI,OAAAjC,OAAA0I,EAAA,EAAA1I,CAAA,GACboH,EADapH,OAAA2I,EAAA,EAAA3I,CAAA,GAEPiC,EAAKgH,EAAK3I,MAAM8G,SAFTpH,OAAA0I,EAAA,EAAA1I,CAAA,GAGTL,EAAME,cAvEA4B,oBEGHyH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOhJ,EAAAC,EAAAC,cAAC+I,EAAD,MAAcC,SAASC,eAAe,SDyHhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjH,KAAK,SAAAkH,GACjCA,EAAaC","file":"static/js/main.7225c121.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 438;","export default [\n    {\n        key: \"0\",\n        text: \"Live Site\",\n        value: \"live_site\"\n    },\n    {\n        key: \"1\",\n        text: \"Twitter\",\n        value: \"twitter\"\n    },\n    {\n        key: \"2\",\n        text: \"Twilio\",\n        value: \"twilio\"\n    },\n    {\n        key: \"3\",\n        text: \"Slack\",\n        value: \"slack\"\n    },\n    {\n        key: \"4\",\n        text: \"Mobile\",\n        value: \"f_c_m\"\n    },\n    {\n        key: \"5\",\n        text: \"MapGT\",\n        value: \"map_g_t\"\n    }\n]\n","import React, { Component } from 'react';\nimport { Dropdown } from 'semantic-ui-react'\nimport clientData from '../data/clients'\nimport './css/ClientConfig.css';\nclass ClientDropdown extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t};\n\t};\n\trender() {\n        return (<Dropdown\n            className=\"dropdownCustom\"\n            name=\"droppy\"\n            compact\n            placeholder='Select Client'\n            onChange={(e,{value})=>this.props.onClientChange(value)}\n            fluid\n            multiple\n            selection\n            options={clientData}\n        />)\n\t};\n};\n\nexport default ClientDropdown;\n","var fetch = require('node-fetch')\nvar fs = require('fs')\nvar queryMessage = `query {\n    areas(start: 0) {\n        name\n        mapgt_slug\n    }\n    talks(start: 0) {\n      base {\n          start_time\n          end_time\n          title\n          description\n          area {\n              name\n              mapgt_slug\n              capacity\n          }\n      }\n      people {\n          name\n          bio\n          link\n          image {\n              url\n          }\n      }\n    }\n    faqs(start: 0) {\n        title\n        description\n    }\n    meals(start: 0) {\n        base {\n            start_time\n            end_time\n            title\n            description\n            area {\n                name\n                mapgt_slug\n                capacity\n            }\n        }\n        restaurant_name\n        restaurant_link\n        menu_items {\n            name\n            dietrestrictions {\n                name\n            }\n        }\n    }\n}`\n// var workshopMessage = `query {\n//     workshops(start: 0) {\n//       id\n//       start_time\n//       end_time\n//       createdAt\n//       updatedAt\n//       image {\n//         url\n//         hash\n//       }\n//     }\n//     meals(start: 0) {\n//       restaurant {\n//         name\n//       }\n//       start_time\n//       end_time\n//       description\n//       tags {\n//         name\n//       }\n//       menu_items {\n//         name\n//         diet_restriction\n//       }\n//     }\n//     events(start: 0) {\n//       start_time\n//       end_time\n//       title\n//       description\n//       tags {\n//         name\n//       }\n//     }\n// }`\n\nexport default async function getCMSData() {\n\treturn fetch('https://cms.hack.gt/graphql', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': `application/json`,\n\t\t\t\t'Accept' : `application/json`,\n                'Access-Control-Allow-Headers': '*'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: queryMessage,\n\t\t\t})\n\t\t}).then(r => {\n\t\t\treturn r.json();\n\t\t}).catch(err => {\n            return false;\n\t\t});\n}\n// getCMSData().then(result => {\n//     fs.writeFile('resources_all.json', JSON.stringify(result), (err) => {\n//         if (err) throw err;\n//         console.log('Resources saved!');\n//     });\n// });\n","import React, { Component } from 'react';\nimport { Dropdown, Input, Grid, Header } from 'semantic-ui-react'\nimport clientData from '../data/clients'\nimport getCMS from '../data/getCMS'\nimport './css/ClientConfig.css';\n\nvar CMSData = {};\nclass ClientConfig extends Component {\n\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t};\n\t};\n\tcomponentDidMount() {\n\t\tgetCMS().then(data => {\n\t\t\tCMSData = data;\n\t\t});\n\t}\n\trender() {\n        let config = this.props.config\n        let combinedConfigUI =\n        this.props.selectedClients.map(client => {\n            return (\n                <div>\n                <Header as='h3'>{\n                        client.charAt(0).toUpperCase() + client.slice(1).replace(\"_\",\"\")}\n                </Header>\n                {Object.keys(this.props.config[client]).map(input => {\n                    switch(config[client][input][\"type\"]) {\n\t\t\t\t\t\tcase \"dropdown\":\n\t\t\t\t\t\t\tconst dropdownValues = CMSData.data[config[client][input].cms];\n\t\t\t\t\t\t\tvar dropdownConfig = dropdownValues.map((data, indx) => {return {\n\t\t\t\t\t\t\t\ttext: data[config[client][input][\"text\"]],\n\t\t\t\t\t\t\t\tvalue: data[config[client][input][\"value\"]],\n\t\t\t\t\t\t\t\tkey: indx + \"\"\n\t\t\t\t\t\t\t}});\n\t\t\t\t\t\t\treturn (<Dropdown\n\t\t\t\t\t\t\t\tplaceholder= {\"\" + input}\n\t\t\t\t\t\t\t\tclassName=\"dropdownCustom\"\n\t\t\t\t\t\t\t\tcompact\n\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\t\toptions={dropdownConfig}\n\t\t\t\t\t\t\t\tonChange={(e,{value})=>this.props.onConfigChange(value, input, client)}\n\t\t\t\t\t\t\t/>)\n\n                        case \"string\":\n                            return (\n                                    <Input className=\"inputCustom\" placeholder={input}\n                                    onChange={(e,{value})=>this.props.onConfigChange(value, input, client)}/>\n                            )\n                            break;\n                        case \"boolean\":\n                            return (\n                                <Dropdown\n                                    placeholder= {\"\" + input}\n                                    className=\"dropdownCustom\"\n                                    compact\n                                    fluid\n                                    selection\n                                    options={[\n                                        {\n                                            key: \"0\",\n                                            text: \"True\",\n                                            value: true\n                                        },\n                                        {\n                                            key: \"1\",\n                                            text: \"False\",\n                                            value: false\n                                        }\n                                    ]}\n                                    onChange={(e,{value})=>this.props.onConfigChange(value, input, client)}\n                                />\n                            )\n                        case \"string-array\":\n                            return  (\n                                <Input className=\"inputCustom\"\n                                    placeholder={\"Input all \" + input}\n                                    onChange={(e,{value})=> this.props.onConfigChange(value.split(\",\"), input, client)}/>\n                            )\n                            break;\n                    }\n                })}\n            </div>\n            )\n        })\n        return (\n            <div>\n                {combinedConfigUI}\n            </div>\n        )\n\t};\n};\n\nexport default ClientConfig;\n","import React, { Component } from 'react';\nimport { Button, Input, Header, Modal } from 'semantic-ui-react'\nimport './css/index.css';\nimport cookie from 'react-cookies'\nclass SecretRequest extends Component {\n\tconstructor() {\n\t\tsuper()\n        var token = cookie.load('BUZZER_TOKEN')\n        this.state = {\n            modal_open: !token\n        }\n\t};\n\n\trender() {\n        return (\n            <div>\n            <Button onClick={()=>{this.setState({modal_open: true})}}> Enter Buzzer Token </Button>\n                <Modal open={this.state.modal_open}>\n                    <Modal.Header>Enter Buzzer Secret</Modal.Header>\n                    <Modal.Content>\n                        <Input className=\"inputCustom\"\n                            placeholder={\"Buzzer Secret\"}\n                            onChange={(e,{value})=>this.setState({\n                                token: value\n                            })}/>\n                        <Button content=\"Submit\" onClick={this.handleClick} />\n                    </Modal.Content>\n\n                </Modal>\n            </div>\n        )\n    };\n    handleClick = () => {\n        this.setState({\n          modal_open: false\n        });\n        cookie.save('BUZZER_TOKEN', this.state.token, { path: '/' })\n        this.props.onCookieSet(this.state.token)\n    }\n};\n\nexport default SecretRequest;\n","export default {\n    live_site: {\n        title: {type:\"string\"},\n        icon: {type:\"string\"}\n    },\n    slack: {\n        channels: {type:\"string-array\"},\n        at_channel: {type:\"boolean\"},\n        at_here: {type:\"boolean\"}\n    },\n    twilio: {\n        numbers: {type:\"string-array\"},\n        groups: {type:\"string-array\"}\n    },\n    twitter: {\n        _: {type:\"boolean\"}\n    },\n    f_c_m: {\n        header: {type:\"string\"},\n        tags: {type:\"string\"}\n    },\n    map_g_t: {\n        area: {\n            type: \"dropdown\",\n            cms: \"areas\",\n            value: \"mapgt_slug\",\n            text: \"name\"\n        },\n        title: {type:\"string\"},\n        time: {type:\"string\"}\n    }\n}\n","import React, {Component} from 'react';\nimport ClientDropdown from './ClientDropdown';\nimport ClientConfig from './ClientConfig';\nimport SecretRequest from './SecretRequest';\nimport clientConfigData from '../data/clientConfigData'\nimport sendNotification from '../data/query.js'\nimport {Button, Grid, Input, Confirm, Header} from 'semantic-ui-react'\nimport './css/index.css';\n\nclass BuzzerUI extends Component {\n    constructor() {\n        super()\n        this.state = {\n            clients: []\n        };\n        this.onDataChange = this.onDataChange.bind(this)\n        this.onConfigChange = this.onConfigChange.bind(this)\n        this.close = this.close.bind(this)\n    };\n\n    render() {\n        return (<div>\n            <SecretRequest onCookieSet={(secret) => {\n                    this.setState({buzzer_secret: secret})\n                }}/>\n            <br/>\n            <div className=\"row\">\n                <div className=\"column\">\n                    <Header as='h1'>Buzzer UI</Header>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"column\">\n                    <ClientDropdown onClientChange={(value) => {\n                            this.setState(prevState => ({\n                                clients: [...value]\n                            }))\n                        }}/>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"column\">\n                    <Input className=\"inputCustom\" placeholder={\"Message\"} onChange={(e, {value}) => this.setState({message: value})}/>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"column\">\n                    <ClientConfig config={clientConfigData || {}} selectedClients={this.state.clients || []} onConfigChange={this.onConfigChange}/>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"column\">\n                    <Button content=\"Submit\" onClick={(e, {value}) => this.onSendNotification()}/>\n                </div>\n\n            </div>\n            <div className=\"row\">\n                <div className=\"column\">\n                    <Confirm open={this.state.open} onCancel={this.close} onConfirm={this.close} content={\"Message: \\\"\" + this.state.message + \"\\\" sent to \" + this.state.clients}/>\n                </div>\n            </div>\n        </div>)\n    };\n\n    close() {\n        this.setState({open: false})\n    }\n    onSendNotification() {\n        let response = sendNotification(this.state.message, this.state.clients, this.state[this.state.clients], this.state.buzzer_secret)\n        this.setState({open: true})\n    }\n    onDataChange(value, key) {\n        this.setState({[key]: value})\n    }\n\n    onConfigChange(value, key, clients) {\n        console.log(value, key)\n        this.setState(prev => ({\n            [clients]: {\n                ...prev[this.state.clients],\n                [key]: value\n            }\n        }))\n    }\n\n};\n\nexport default BuzzerUI;\n","var queryMessage = `query send_message($message:String!, $plugins:PluginMaster!) {\n  send_message(message: $message, plugins: $plugins) {\n    plugin\n    errors {\n      error\n      message\n    }\n  }\n}`;\n\nexport default (message, clients, plugins, adminKey) => {\n    let clientSchema = clients.map(client => {\n        console.log(\"client:!\")\n        console.log(client)\n        return ({\n            [client]: {\n                ...plugins\n            }\n        })\n    });\n    console.log(\"schema\")\n    console.log(clientSchema)\n    let clientSchemaJson = {}\n    clientSchema.map(client => {\n        let index = Object.keys(client)[0];\n        clientSchemaJson[index] = client[index];\n    })\n    console.log(clientSchemaJson)\n    return fetch('/graphql', {\n            method: 'POST',\n            headers: {\n                'Content-Type': `application/json`,\n                'Accept'      : `application/json`,\n                'Authorization': 'Basic ' + adminKey\n            },\n            body: JSON.stringify({\n                query: queryMessage,\n                variables: {\n                    \"message\": message,\n                    \"plugins\": clientSchemaJson\n                }\n            })\n        }).then(r =>\n            r.json()\n        ).then(data => {\n            console.log(\"Success!\", data)\n            return true;\n        })\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BuzzerUI from './components/BuzzerUI';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BuzzerUI />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}